pipeline {
    agent any
    
    environment {
        PATH = "C:\\Users\\sansk\\Downloads\\apache-maven-3.9.6\\bin;$PATH"
        REPO_PATH = "C:\\ProgramData\\Jenkins\\.jenkins\\workspace\\GreenCodeScanPipeline"
        PYTHON_PATH = "C:\\Users\\sansk\\AppData\\Local\\Programs\\Python\\Python312\\python.exe"
    }
    
    stages {
        stage('Stage 1: Clone Repository') {
            steps {
                echo "Client Name: ${env.CLIENT_NAME}"
                ws("${env.REPO_PATH}") {
                    git branch: 'main', credentialsId: '65fd2953-20c8-47ac-90a5-de4ab6edf5a', url: 'https://github.com/sanskar22003/GreenCodeScan.git'
                }
            }
        }
        stage('Stage 2: Track Server Emissions') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTHON_PATH} server_emissions.py"
                    }
                }
            }
        }
        stage('Stage 3: Track Multiple Server Emissions') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTHON_PATH} mul_server_emissions.py"
                    }
                }
            }
        }
        stage('Stage 4: Green Code Refiner') {
            steps {
                dir("${env.REPO_PATH}") {
                    catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                        bat "${env.PYTHON_PATH} GreenCodeRefiner.py"
                    }
                }
            }
        }
        stage('Stage 5: Dynamic Code Analysis') {
            steps {
                dir("${env.REPO_PATH}") {
                    withEnv(["PYTEST=${env.PYTEST_PATH}"]) {
                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {
                            bat "${env.PYTHON_PATH} track_emissions.py"
                        }
                    }
                }
            }
        }
    }
}
